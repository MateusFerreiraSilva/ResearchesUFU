// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ResearchesUFU.API.Context;

#nullable disable

namespace ResearchesUFU.API.Migrations
{
    [DbContext(typeof(ResearchesUFUContext))]
    [Migration("20230129000543_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ResearchesUFU.API.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Birthdate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CoverPhotoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastUpdated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfilePictureUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "blablablablabla",
                            Birthdate = "20/07/1990",
                            CoverPhotoUrl = "",
                            LastUpdated = "29/01/2023 00:05:43",
                            Name = "John Doe",
                            PhoneNumber = "553498153388",
                            ProfilePictureUrl = "https://i.kym-cdn.com/entries/icons/original/000/040/009/3dsaulcover.jpg",
                            UserId = 1,
                            UserType = "Publicator"
                        },
                        new
                        {
                            Id = 2,
                            Bio = ".........................",
                            Birthdate = "01/05/2001",
                            CoverPhotoUrl = "",
                            LastUpdated = "29/01/2023 00:05:43",
                            Name = "Janne Doe",
                            PhoneNumber = "553498851389",
                            ProfilePictureUrl = "https://hiperideal.vteximg.com.br/arquivos/ids/167660/27502.jpg?v=636615816147030000",
                            UserId = 2,
                            UserType = "Publicator"
                        });
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acronym = "SI",
                            Name = "Sistemas de Informação"
                        },
                        new
                        {
                            Id = 2,
                            Acronym = "CC",
                            Name = "Ciência da Computação"
                        },
                        new
                        {
                            Id = 3,
                            Acronym = "BIO",
                            Name = "Biologia"
                        });
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.Research", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("LastUpdated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PublicationDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResearchStructure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Researches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastUpdated = "29/01/2023 00:05:43",
                            PublicationDate = "02/02/2022",
                            ResearchStructure = "",
                            Status = "Em andamento",
                            Summary = "AAAAA",
                            Thumbnail = "https://cdn.vox-cdn.com/thumbor/WR9hE8wvdM4hfHysXitls9_bCZI=/0x0:1192x795/1400x1400/filters:focal(596x398:597x399)/cdn.vox-cdn.com/uploads/chorus_asset/file/22312759/rickroll_4k.jpg",
                            Title = "Primeira Pesquisa"
                        },
                        new
                        {
                            Id = 2,
                            LastUpdated = "29/01/2023 00:05:43",
                            PublicationDate = "19/09/2019",
                            ResearchStructure = "",
                            Status = "Finalizada",
                            Summary = "BBBB",
                            Thumbnail = "https://cdn.vox-cdn.com/thumbor/WR9hE8wvdM4hfHysXitls9_bCZI=/0x0:1192x795/1400x1400/filters:focal(596x398:597x399)/cdn.vox-cdn.com/uploads/chorus_asset/file/22312759/rickroll_4k.jpg",
                            Title = "Segunda Pesquisa"
                        },
                        new
                        {
                            Id = 3,
                            LastUpdated = "29/01/2023 00:05:43",
                            PublicationDate = "01/01/2011",
                            ResearchStructure = "",
                            Status = "Cancelada",
                            Summary = "Potato",
                            Thumbnail = "https://static.mundoeducacao.uol.com.br/mundoeducacao/conteudo_legenda/01325ea5fd7fd4ecab7e209393bf6188.jpg",
                            Title = "Batata"
                        });
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.ResearchAuthor", b =>
                {
                    b.Property<int>("ResearchId")
                        .HasColumnType("integer");

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.HasKey("ResearchId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("ResearchAuthor");

                    b.HasData(
                        new
                        {
                            ResearchId = 1,
                            AuthorId = 1
                        },
                        new
                        {
                            ResearchId = 2,
                            AuthorId = 1
                        },
                        new
                        {
                            ResearchId = 3,
                            AuthorId = 2
                        });
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.ResearchField", b =>
                {
                    b.Property<int>("ResearchId")
                        .HasColumnType("integer");

                    b.Property<int>("FieldId")
                        .HasColumnType("integer");

                    b.HasKey("ResearchId", "FieldId");

                    b.HasIndex("FieldId");

                    b.ToTable("ResearchField");

                    b.HasData(
                        new
                        {
                            ResearchId = 1,
                            FieldId = 1
                        },
                        new
                        {
                            ResearchId = 2,
                            FieldId = 1
                        },
                        new
                        {
                            ResearchId = 2,
                            FieldId = 2
                        },
                        new
                        {
                            ResearchId = 3,
                            FieldId = 3
                        });
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.ResearchTag", b =>
                {
                    b.Property<int>("ResearchId")
                        .HasColumnType("integer");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.HasKey("ResearchId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ResearchTag");

                    b.HasData(
                        new
                        {
                            ResearchId = 1,
                            TagId = 1
                        },
                        new
                        {
                            ResearchId = 1,
                            TagId = 2
                        },
                        new
                        {
                            ResearchId = 1,
                            TagId = 4
                        },
                        new
                        {
                            ResearchId = 2,
                            TagId = 3
                        },
                        new
                        {
                            ResearchId = 3,
                            TagId = 5
                        },
                        new
                        {
                            ResearchId = 3,
                            TagId = 6
                        });
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("LastUpdated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastUpdated = "29/01/2023 00:05:43",
                            Name = "artificial intelligence"
                        },
                        new
                        {
                            Id = 2,
                            LastUpdated = "29/01/2023 00:05:43",
                            Name = "ai"
                        },
                        new
                        {
                            Id = 3,
                            LastUpdated = "29/01/2023 00:05:43",
                            Name = "cloud computing"
                        },
                        new
                        {
                            Id = 4,
                            LastUpdated = "29/01/2023 00:05:43",
                            Name = "computer science"
                        },
                        new
                        {
                            Id = 5,
                            LastUpdated = "29/01/2023 00:05:43",
                            Name = "biochemistry"
                        },
                        new
                        {
                            Id = 6,
                            LastUpdated = "29/01/2023 00:05:43",
                            Name = "potato"
                        });
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastUpdated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Email = "johndoe@ufu.br",
                            LastUpdated = "29/01/2023 00:05:43",
                            PasswordHash = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Email = "jannedoe@ufu.br",
                            LastUpdated = "29/01/2023 00:05:43",
                            PasswordHash = "f4610aa514477222afac2b77f971d069780ca2846f375849f3dfa3c0047ebbd1"
                        });
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.Author", b =>
                {
                    b.HasOne("ResearchesUFU.API.Models.User", "User")
                        .WithOne("Author")
                        .HasForeignKey("ResearchesUFU.API.Models.Author", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.ResearchAuthor", b =>
                {
                    b.HasOne("ResearchesUFU.API.Models.Author", "Author")
                        .WithMany("ResearchAuthor")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchesUFU.API.Models.Research", "Research")
                        .WithMany("ResearchAuthor")
                        .HasForeignKey("ResearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Research");
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.ResearchField", b =>
                {
                    b.HasOne("ResearchesUFU.API.Models.Field", "Field")
                        .WithMany("ResearchField")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchesUFU.API.Models.Research", "Research")
                        .WithMany("ResearchField")
                        .HasForeignKey("ResearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("Research");
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.ResearchTag", b =>
                {
                    b.HasOne("ResearchesUFU.API.Models.Research", "Research")
                        .WithMany("ResearchTag")
                        .HasForeignKey("ResearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchesUFU.API.Models.Tag", "Tag")
                        .WithMany("ResearchTag")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Research");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.Author", b =>
                {
                    b.Navigation("ResearchAuthor");
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.Field", b =>
                {
                    b.Navigation("ResearchField");
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.Research", b =>
                {
                    b.Navigation("ResearchAuthor");

                    b.Navigation("ResearchField");

                    b.Navigation("ResearchTag");
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.Tag", b =>
                {
                    b.Navigation("ResearchTag");
                });

            modelBuilder.Entity("ResearchesUFU.API.Models.User", b =>
                {
                    b.Navigation("Author")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
